@model app.Services.PaginatedList<app.Services.Models.IndicatorSignalCustomView>
@addTagHelper*, Microsoft.AspNetCore.Mvc.TagHelpers

<div class="text-center">

@if (Model.Any())
{
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Reset</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Stock)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Tool)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Signal)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Date)
                </th>
                @* <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().OnDate)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Price)
                </th>
                <th>Current Price</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @if (@item.Tool == "")
                {
                    @* @Html.DisplayFor(modelItem => item.Stock, "", new { id="stockName", name="stockName"}) *@
                    @* <span id="@("stockName"+item.Stock)">@item.Stock</span> *@
                    @Html.DisplayFor(modelItem => item.Stock)
                }
                @* else
                {
                    <span id="stockName" hidden>@item.Stock</span>
                } *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Tool)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Signal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.OnDate)
            </td> *@
            <td>
                @if (@item.Tool != "")
                {
                @Html.DisplayFor(modelItem => item.Price)
                }
            </td>
            <td>
                @if (@item.Tool == "")
                {
                    @* <span id="@("currentPrice"+item.Stock)">@item.CurrentPrice</span> *@
                    <span>@item.CurrentPrice</span>
                    @* @if (@item.Signal == "BUY") { *@
                        <span> | </span>
                        @* <input type="number" id="quantity" name="quantity" min="1" max="100", value="5"> *@
                        <input type="number" id="@("quantity"+item.Stock)" name="quantity" min="1" max="100", value="5">
                        <span> : </span> 
                        @* <a asp-action="Buy" asp-route-stock="@item.Stock" asp-route-price="@item.CurrentPrice">Buy</a> *@
                        <input id="buyExecute" type="submit" value="Buy" class="btn" style="background-color:green; border-color:white" onclick="BuyExecute('@item.Stock', @item.CurrentPrice)"/>
                    @* }                  *@
                }
                @* else
                {
                    <input type="number" id="@("quantity"+item.Stock)" name="quantity" min="1" max="100", value="5">
                } *@
            </td>
        </tr>
}
    </tbody>
</table>

var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
var nextDisabled = !Model.HasNextPage ? "disabled" : "";

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
}
</div>

<script type="text/javascript" language="javascript">
    function BuyExecute(stockName, currentPrice) {
        var buyQuantity = $('#quantity'+stockName).val();

        $.ajax({
                url: '@Url.Action("BuyExecute", "Home")',
                type: 'GET',
                data: { stock: stockName, price: currentPrice, quantity: buyQuantity },
                success: function (result) {
                    console.log('success')
                    alert(result)
                },
                error: function () {
                    console.log('falied')
                }
            });
            return false;
    }
</script>