@model app.Services.PaginatedList<app.Services.Models.StockTransactionReportView>
@addTagHelper*, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Transactions";
}
<h1>@ViewData["Title"]</h1>

<div class="text-center">

@if (Model.Any())
{
<form asp-action="StockTransactionReport" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="StockTransactionReport">Reset</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Stock)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Holding)
                </th>
                 <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Sold)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().AvgPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().CurrentPrice)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().Profit)
                </th>
                <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @* <span id="stockName">@item.Stock</span> *@
                @Html.DisplayFor(modelItem => item.Stock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Holding)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Sold)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AvgPrice)
                @* <span id="avgPrice">@item.AvgPrice</span> *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CurrentPrice)
                @* <span id="currentPrice">@item.CurrentPrice</span> *@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Profit)
            </td>
            <td>
                @if (@item.Holding > 0)
                {
                    @* <a asp-action="Sell" asp-route-stock="@item.Stock" asp-route-price="@item.CurrentPrice" asp-route-avgPrice="@item.AvgPrice">Sell</a> *@
                    <input type="number" id="quantity" name="quantity" min="1" max="100", value="3">
                    <span> : </span>
                    <input id="sellExecute" type="submit" value="Sell" class="btn" style="background-color:red; border-color:white" onclick="SellExecute('@item.Stock', @item.CurrentPrice, @item.AvgPrice)"/>
                    <span> | </span>
                    <span> @item.SellSuggestion </span>
                }
                else
                {
                    <a disabled>Sell</a>
                }
            </td>
        </tr>
}
    </tbody>
</table>

var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
var nextDisabled = !Model.HasNextPage ? "disabled" : "";

<a asp-action="StockTransactionReport"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="StockTransactionReport"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
}
</div>

<script type="text/javascript" language="javascript">
    function SellExecute(stockName, currentPrice, avgCurrentPrice) {
        var sellQuantity = $('#quantity').val();
      
        $.ajax({
                url: '@Url.Action("SellExecute", "Home")',
                type: 'GET',
                data: { stock: stockName, price: currentPrice, avgPrice: avgCurrentPrice, quantity: sellQuantity },
                success: function (result) {
                    console.log('success')
                    alert(result)
                },
                error: function () {
                    console.log('falied')
                }
            });
            return false;
    }
</script>